<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Logazier on Sajal Kayan</title>
    <link>http://www.sajalkayan.com/tag/logazier.xml</link>
    <description>Recent content in Logazier on Sajal Kayan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://www.sajalkayan.com/tag/logazier.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Python script to detect bad bots/people faking as Googlebot</title>
      <link>http://www.sajalkayan.com/python-script-to-detect-bad-botspeople-faking-as-googlebot.html</link>
      <pubDate>Sat, 28 Mar 2009 16:25:34 +0000</pubDate>
      
      <guid>http://www.sajalkayan.com/python-script-to-detect-bad-botspeople-faking-as-googlebot.html</guid>
      <description>A script for analyzing my webservers access.log is long overdue here is a small start. Just recently I noticed a bad bot was attempting to scrape whole of my site using Googlebot&#39;s useragent. Since im learning python, I thought it might be a nice experience to write a simple script which can help me detect these fakers.

The script looks at the access log, looks for records matching &#34;Googlebot&#34; then validates based on techniques mentioned at &#34;&lt;a href=&#34;http://googlewebmastercentral.blogspot.com/2006/09/how-to-verify-googlebot.html&#34;&gt;How to verify Googlebot&lt;/a&gt;&#34; at Google Webmaster Central Blog. It may also be useful or even fun to catch other SEOs trying to see your site thru Googlebot&#39;s eyes.

The logic is simple. The IP from which the request is coming in should point to a *.googlebot.com and in turn the hostname should resolve back to the same IP. The first part can be faked by a smart faker, but the latter is not possible(unless they break into Google&#39;s DNS servers ;) ). This 2 step validation is a sure shot method.

For a Genuine Googlebot request :-

Server log entry :-
&lt;code&gt;&lt;strong&gt;66.249.71.202&lt;/strong&gt; - - [28/Mar/2009:08:59:14 -0500] GET / HTTP/1.1 &#34;200&#34; 17892 &#34;-&#34; &#34;Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)&#34; &#34;-&#34;&lt;/code&gt;
IP : 66.249.71.202

Thus :-
&lt;code&gt;# host 66.249.71.202
202.71.249.66.in-addr.arpa domain name pointer crawl-66-249-71-202.&lt;strong&gt;googlebot.com&lt;/strong&gt;.
# host crawl-66-249-71-202.googlebot.com.
crawl-66-249-71-202.googlebot.com has address &lt;strong&gt;66.249.71.202&lt;/strong&gt;
#&lt;/code&gt;
For now this script outputs : The number of hits, IP, hostname, and what ip the hostname resolvs to....
&lt;code&gt;# ./logazier.py
92 - 99.190.96.157 - adsl-99-190-96-157.dsl.pltn13.sbcglobal.net - FAKE - 99.190.96.157
36 - 24.154.150.217 - dynamic-acs-24-154-150-217.zoominternet.net - FAKE - 24.154.150.217
4 - 83.82.191.185 - 5352BFB9.cable.casema.nl - FAKE - 83.82.191.185
4 - 69.64.69.150 - 69-64-69-150.dedicated.abac.net - FAKE - 69.64.69.150
3 - 64.191.54.85 - venus.surfwebhost.com - FAKE - 64.191.54.85
3 - 117.47.205.13 - err - FAKE - err
2 - 218.186.12.202 - cm202.omega12.maxonline.com.sg - FAKE - 218.186.12.202
1 - 96.254.203.143 - pool-96-254-203-143.tampfl.fios.verizon.net - FAKE - 96.254.203.143
1 - 76.160.175.238 - mail.appianllc.com - FAKE - 76.160.175.238
1 - 121.246.166.247 - 121.246.166.247.static-hyd.vsnl.net.in - FAKE - err
1 - 117.196.235.141 - err - FAKE - err&lt;/code&gt;&lt;strong&gt;&lt;/strong&gt;

&lt;strong&gt;The script can be downloaded at : &lt;a href=&#34;http://www.sajalkayan.com/logazier/0.0.1/logazier.py&#34;&gt;/logazier/0.0.1/logazier.py&lt;/a&gt;&lt;/strong&gt;

Upcoming features.
&lt;ol&gt;
	&lt;li&gt; Detect other major bots as well - yahoo, msn, alexa, etc...&lt;/li&gt;
	&lt;li&gt; Analyze the access.log for bad bot activity even when the bots use regular browser user agents - much more complex than I thought :)&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>