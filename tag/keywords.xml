<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Keywords on Sajal Kayan </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://sajal.github.io/tag/keywords.xml</link>
    <language>en-us</language>
    
    
    <updated>Sun, 03 Aug 2008 22:53:12 &#43;0000</updated>
    
    <item>
      <title>Ruby class to fetch suggested keywords</title>
      <link>http://sajal.github.io/ruby-class-fetch-suggested-keywords.html</link>
      <pubDate>Sun, 03 Aug 2008 22:53:12 &#43;0000</pubDate>
      
      <guid>http://sajal.github.io/ruby-class-fetch-suggested-keywords.html</guid>
      <description>I have recently &lt;a href=&#34;http://twitter.com/sajal/statuses/872225824&#34;&gt;ditched Perl and fell for Ruby&lt;/a&gt;. 

Here is a Ruby class which gets suggested keywords from yahoo API and presents it in a comma separated list. This might be useful for people who use Ruby to upload/edit multiple posts and need to tag them automagically.

This might be awfully simple for the hardcore guys, but for a noob like me, had I come across this example earlier it would have saved me an hour or so. Here it goes...

The Class :-
&lt;pre lang=&#34;ruby&#34;&gt;# A ruby class to fetch suggested keywords using Yahoo&#39;s term Extraction API
 require &#39;rubygems&#39;
require &#39;xmlsimple&#39;
require &#39;net/http&#39;

class Tagger
  def content
    @content
  end
  def content=(content)
    @content = content
  end
    def appid
    @appid
  end
  def appid=(appid)
    @appid = appid
  end
  def initialize

  end
  def fetch
          url = URI.parse(&#39;http://search.yahooapis.com/ContentAnalysisService/V1/termExtraction&#39;)
      post_args = {
            &#39;appid&#39; =&amp;gt; appid,
            &#39;context&#39; =&amp;gt; content,
            &#39;output&#39; =&amp;gt; &#34;xml&#34;
      }
      resp1, xml_data = Net::HTTP.post_form(url, post_args)
      keywords = &#34;&#34;
      data = XmlSimple.xml_in(xml_data)
      data[&#39;Result&#39;].each do |item|
      keywords = keywords + item + &#34;, &#34;
      end
      return keywords
  end
end&lt;/pre&gt;
Download the class &lt;a href=&#34;/wp-content/uploads/2008/08/tagger.rb&#34;&gt;here&lt;/a&gt;
Sample usage :
&lt;pre lang=&#34;ruby&#34;&gt;require &#39;tagger&#39;
tagg = Tagger.new
tagg.appid =     &#39;GO_GET_YOUR_OWN!&#39;
tagg.content = &#34;The content of the post.....&#34;
puts tagg.fetch&lt;/pre&gt;

The appid is available from the &lt;a href=&#34;http://developer.yahoo.com/wsregapp/&#34;&gt;Yahoo Developer Network&lt;/a&gt;
Limitations : Maximum 5000 queries per day per IP.
</description>
    </item>
    
  </channel>
</rss>